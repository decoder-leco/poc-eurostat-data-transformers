---
import { getCollection } from 'astro:content';
import MarkDown from './typedoc/markdown/MarkDown'; // <MarkDown markdown={readmeEntry.text} client:only="preact" />
// import GithubMarkDown from "./typedoc/remark-ghf/GithubMarkDown"// import Markdown from 'react-markdown' // does not work at all with hydrated islands
// import rehypeHighlight from 'rehype-highlight'

const typeDocEntries = await getCollection('api-docs');


---
{typeDocEntries.map(typeDocEntry => {
  /**
  let readme: string = ``
  for (let i = 0; typeDocEntry.data.readme.length; i++) {

  }
   */
  return (
  <h1 class="p-3 m-4" >
      
    <kbd class="text-xl font-bold leading-none tracking-tight text-gray-900 md:text-xl lg:text-xl dark:text-white px-2 py-1.5 text-xs font-semibold text-gray-800 bg-gray-100 border border-gray-200 rounded-lg dark:bg-gray-600 dark:text-gray-100 dark:border-gray-500">
      {//typeDocEntry.data.name
        typeDocEntry.data.packageName
      }  
    </kbd>
    
  </h1>

)})}

{typeDocEntries[0].data.readme.map(async (readmeEntry: { kind: string, text: string}, index: number) => {
        
    return (
      <>
        <MarkDown markdown={readmeEntry.text} client:only="preact" />
      </>
    )

})}